[{"/Users/bashiregeh/coding-tests/paint/src/App.js":"1","/Users/bashiregeh/coding-tests/paint/src/components/Toolbar/Tool.js":"2","/Users/bashiregeh/coding-tests/paint/src/components/Toolbar/Toolbar.js":"3","/Users/bashiregeh/coding-tests/paint/src/components/Canvas/Square.js":"4"},{"size":2197,"mtime":1606449478191,"results":"5","hashOfConfig":"6"},{"size":461,"mtime":1606441156614,"results":"7","hashOfConfig":"6"},{"size":2336,"mtime":1606449031894,"results":"8","hashOfConfig":"6"},{"size":980,"mtime":1606447567057,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"uzivxu",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bashiregeh/coding-tests/paint/src/App.js",["19"],"import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Square from \"./components/Canvas/Square\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\n\nfunction App() {\n  const [color, setColor] = useState(\"#fff\");\n  const [canvas, setCanvas] = useState([]);\n  const [tool, setTool] = useState(false);\n  const [dimensions, setDimensions] = useState({ height: \"500\", width: \"500\" });\n  const { height, width } = dimensions;\n  const canvasColumns = 16;\n  const canvasRows = 32;\n\n  useEffect(() => {\n    createCanvas();\n  }, []);\n\n  const createRow = () => {\n    const row = [];\n    for (let i = 1; i <= canvasRows; i++) {\n      row.push(\"#fff\");\n    }\n    return row;\n  };\n\n  const createCanvas = () => {\n    const canvas = [];\n    for (let i = 1; i <= canvasColumns; i++) {\n      canvas.push(createRow());\n    }\n    return setCanvas(canvas);\n  };\n\n  const renderCanvas = (canvas) => {\n    return canvas.map((row, index1) => (\n      <div key={index1} style={{ display: \"flex\", msFlexDirection: \"row\" }}>\n        {row.map((squareColor, index2) => (\n          <Square\n            key={`${index1}-${index2}`}\n            width={width}\n            height={height}\n            canvasColumns={canvasColumns}\n            canvasRows={canvasRows}\n            currentColor={squareColor}\n            newColor={color}\n            canvas={canvas}\n            setCanvas={setCanvas}\n            row={index1}\n            tool={tool}\n            column={index2}\n          />\n        ))}\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <section className=\"heading\">\n        <h1>PAINT</h1>\n      </section>\n      <section className=\"main\">\n        <div className=\"tools\">\n          <Toolbar\n            color={color}\n            setColor={setColor}\n            tool={tool}\n            setTool={setTool}\n            height={height}\n            width={width}\n            dimensions={dimensions}\n            setDimensions={setDimensions}\n          />\n        </div>\n        <div className=\"canvas-container\">\n          <div className=\"canvas\" style={{ height: height, width: width }}>{renderCanvas(canvas)}</div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bashiregeh/coding-tests/paint/src/components/Toolbar/Tool.js",["20"],"/Users/bashiregeh/coding-tests/paint/src/components/Toolbar/Toolbar.js",[],"/Users/bashiregeh/coding-tests/paint/src/components/Canvas/Square.js",[],{"ruleId":"21","severity":1,"message":"22","line":17,"column":6,"nodeType":"23","endLine":17,"endColumn":8,"suggestions":"24"},{"ruleId":"25","severity":1,"message":"26","line":19,"column":7,"nodeType":"27","endLine":19,"endColumn":51},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createCanvas'. Either include it or remove the dependency array.","ArrayExpression",["28"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"29","fix":"30"},"Update the dependencies array to be: [createCanvas]",{"range":"31","text":"32"},[537,539],"[createCanvas]"]